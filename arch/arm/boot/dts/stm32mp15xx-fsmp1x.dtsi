// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/*
 * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
 * Author: Alexandre Torgue <alexandre.torgue@st.com> for STMicroelectronics.
 */

#include "stm32mp157-m4-srm.dtsi"
#include "stm32mp157-m4-srm-pinctrl.dtsi"
#include <dt-bindings/mfd/st,stpmic1.h>
#include <dt-bindings/rtc/rtc-stm32.h>

/ {
	memory@c0000000 {
		device_type = "memory";
		reg = <0xc0000000 0x20000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		mcuram2: mcuram2@10000000 {
			compatible = "shared-dma-pool";
			reg = <0x10000000 0x40000>;
			no-map;
		};

		vdev0vring0: vdev0vring0@10040000 {
			compatible = "shared-dma-pool";
			reg = <0x10040000 0x1000>;
			no-map;
		};

		vdev0vring1: vdev0vring1@10041000 {
			compatible = "shared-dma-pool";
			reg = <0x10041000 0x1000>;
			no-map;
		};

		vdev0buffer: vdev0buffer@10042000 {
			compatible = "shared-dma-pool";
			reg = <0x10042000 0x4000>;
			no-map;
		};

		mcuram: mcuram@30000000 {
			compatible = "shared-dma-pool";
			reg = <0x30000000 0x40000>;
			no-map;
		};

		retram: retram@38000000 {
			compatible = "shared-dma-pool";
			reg = <0x38000000 0x10000>;
			no-map;
		};
	};

	panel_backlight: panel-backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm2 0 5000000>;
		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <6>;
		status = "okay";
	};
	
	// led {
	// 	compatible = "gpio-leds";
	// 	blue {
	// 		label = "heartbeat";
	// 		gpios = <&gpiod 11 GPIO_ACTIVE_HIGH>;
	// 		linux,default-trigger = "heartbeat";
	// 		default-state = "off";
	// 	};
	// };

	sound {
		compatible = "audio-graph-card";
		label = "STM32MP1-FSMP1A";
		routing =
			"Playback" , "MCLK",
			"Capture" , "MCLK",
			"MICL" , "Mic Bias";
		dais = <&sai2a_port &sai2b_port>;
		//dais = <&sai2a_port &sai2b_port &i2s2_port>;
		status = "okay";
	};

	usb_phy_tuning: usb-phy-tuning {
		st,hs-dc-level = <2>;
		st,fs-rftime-tuning;
		st,hs-rftime-reduction;
		st,hs-current-trim = <15>;
		st,hs-impedance-trim = <1>;
		st,squelch-level = <3>;
		st,hs-rx-offset = <2>;
		st,no-lsfs-sc;
	};

	vin: vin {
		compatible = "regulator-fixed";
		regulator-name = "vin";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

	v3v3: regulator-3p3v {
		compatible = "regulator-fixed";
		regulator-name = "v3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	v1v8_audio: regulator-v1v8-audio {
		compatible = "regulator-fixed";
		regulator-name = "v1v8_audio";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
		regulator-boot-on;
	};

	v3v3_hdmi: regulator-v3v3-hdmi {
		compatible = "regulator-fixed";
		regulator-name = "v3v3_hdmi";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	v1v2_hdmi: regulator-v1v2-hdmi {
		compatible = "regulator-fixed";
		regulator-name = "v1v2_hdmi";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vdd_usb: regulator-vdd-usb {
		compatible = "regulator-fixed";
		regulator-name = "vdd_usb";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vdd: regulator-vdd {
		compatible = "regulator-fixed";
		regulator-name = "vdd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	wifi_pwrseq: wifi-pwrseq {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&gpiod 4 GPIO_ACTIVE_LOW>;
	};
};

// &adc {
// 	pinctrl-names = "default";
// 	pinctrl-0 = <&adc12_ain_pins_a>, <&adc12_usb_cc_pins_a>;
// 	vdd-supply = <&vdd>;
// 	vdda-supply = <&vdd>;
// 	vref-supply = <&vrefbuf>;
// 	status = "disabled";
// 	adc1: adc@0 {
// 		/*
// 		 * Type-C USB_PWR_CC1 & USB_PWR_CC2 on in18 & in19.
// 		 * Use at least 5 * RC time, e.g. 5 * (Rp + Rd) * C:
// 		 * 5 * (56 + 47kOhms) * 5pF => 2.5us.
// 		 * Use arbitrary margin here (e.g. 5us).
// 		 */
// 		st,min-sample-time-nsecs = <5000>;
// 		/* AIN connector, USB Type-C CC1 & CC2 */
// 		st,adc-channels = <0 1 6 13 18 19>;
// 		status = "okay";
// 	};
// 	adc2: adc@100 {
// 		/* AIN connector, USB Type-C CC1 & CC2 */
// 		st,adc-channels = <0 1 2 6 18 19>;
// 		st,min-sample-time-nsecs = <5000>;
// 		status = "okay";
// 	};
// };

&cec {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cec_pins_b>;
	pinctrl-1 = <&cec_pins_sleep_b>;
	status = "okay";
};

// &cpu0{
// 	cpu-supply = <&vddcore>;
// };

// &cpu1{
// 	cpu-supply = <&vddcore>;
// };

&crc1 {
	status = "okay";
};

&dma1 {
	sram = <&dma_pool>;
};

&dma2 {
	sram = <&dma_pool>;
};

&dts {
	status = "okay";
};

&ethernet0 {
	status = "okay";
	pinctrl-0 = <&ethernet0_rgmii_pins_a>;
	pinctrl-1 = <&ethernet0_rgmii_pins_sleep_a>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy0>;

	mdio0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		phy0: ethernet-phy@0 {
			reg = <0>;
		};
	};
};

&gpu {
	contiguous-area = <&gpu_reserved>;
	status = "okay";
};

&hash1 {
	status = "okay";
};


&i2c5 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c5_pins_a>;
	pinctrl-1 = <&i2c5_pins_sleep_a>;
	i2c-scl-rising-time-ns = <100>;
	i2c-scl-falling-time-ns = <7>;
	clock-frequency = <100000>;
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";

	// RGB2HDMI, transfer-chip
	hdmi-transmitter@39 {
		compatible = "sil,sii9022";
		reg = <0x39>;
		iovcc-supply = <&v3v3_hdmi>;
		cvcc12-supply = <&v1v2_hdmi>;
		reset-gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
		interrupts = <14 IRQ_TYPE_EDGE_FALLING>;
		interrupt-parent = <&gpioa>;
		#sound-dai-cells = <0>;
		status = "okay";
		ports {
			#address-cells = <1>;
			#size-cells = <0>;
			port@0 {
				reg = <0>;
				sii9022_in: endpoint {
					remote-endpoint = <&ltdc_ep0_out>;
				};
			};
		};
	};

	cs42l51: cs42l51@4a {
		compatible = "cirrus,cs42l51";
		reg = <0x4a>;
		#sound-dai-cells = <0>;
		VL-supply = <&v3v3>;
		VD-supply = <&v1v8_audio>;
		VA-supply = <&v1v8_audio>;
		VAHP-supply = <&v1v8_audio>;
		reset-gpios = <&gpioc 0 GPIO_ACTIVE_LOW>;
		clocks = <&sai2a>;
		clock-names = "MCLK";
		status = "okay";

		cs42l51_port: port {
			#address-cells = <1>;
			#size-cells = <0>;

			cs42l51_tx_endpoint: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&sai2a_endpoint>;
				frame-master;
				bitclock-master;
			};

			cs42l51_rx_endpoint: endpoint@1 {
				reg = <1>;
				remote-endpoint = <&sai2b_endpoint>;
				frame-master;
				bitclock-master;
			};
		};
	};
};

// &i2s2 {
// 	clocks = <&rcc SPI2>, <&rcc SPI2_K>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
// 	clock-names = "pclk", "i2sclk", "x8k", "x11k";
// 	pinctrl-names = "default", "sleep";
// 	pinctrl-0 = <&i2s2_pins_a>;
// 	pinctrl-1 = <&i2s2_pins_sleep_a>;
// 	status = "okay";

// 	i2s2_port: port {
// 		i2s2_endpoint: endpoint {
// 			remote-endpoint = <&sii9022_tx_endpoint>;
// 			format = "i2s";
// 			mclk-fs = <256>;
// 		};
// 	};
// };

&ipcc {
	status = "okay";
};

&iwdg2 {
	timeout-sec = <32>;
	status = "okay";
};

&ltdc {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ltdc_pins_b>;
	pinctrl-1 = <&ltdc_pins_sleep_b>;
	status = "okay";

	port {
		#address-cells = <1>;
		#size-cells = <0>;

		ltdc_ep0_out: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&sii9022_in>;
		};
		ltdc_ep1_out: endpoint@1 {
			reg = <1>;
			remote-endpoint = <&panel_in_rgb>;
		};
	};
};

// &m4_rproc {
// 	memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
// 			<&vdev0vring1>, <&vdev0buffer>;
// 	mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
// 	mbox-names = "vq0", "vq1", "shutdown";
// 	interrupt-parent = <&exti>;
// 	interrupts = <68 1>;
// 	wakeup-source;
// 	status = "okay";
// };

// &pwr_regulators {
// 	vdd-supply = <&vdd>;
// 	vdd_3v3_usbfs-supply = <&vdd_usb>;
// };

&rng1 {
	status = "okay";
};

&rtc {
	status = "okay";
};

&sai2 {
	clocks = <&rcc SAI2>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
	clock-names = "pclk", "x8k", "x11k";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&sai2a_pins_a>, <&sai2b_pins_b>;
	pinctrl-1 = <&sai2a_sleep_pins_a>, <&sai2b_sleep_pins_b>;
	status = "okay";

	sai2a: audio-controller@4400b004 {
		#clock-cells = <0>;
		dma-names = "tx";
		clocks = <&rcc SAI2_K>;
		clock-names = "sai_ck";
		status = "okay";

		sai2a_port: port {
			sai2a_endpoint: endpoint {
				remote-endpoint = <&cs42l51_tx_endpoint>;
				format = "i2s";
				mclk-fs = <256>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
			};
		};
	};

	sai2b: audio-controller@4400b024 {
		dma-names = "rx";
		st,sync = <&sai2a 2>;
		clocks = <&rcc SAI2_K>, <&sai2a>;
		clock-names = "sai_ck", "MCLK";
		status = "okay";

		sai2b_port: port {
			sai2b_endpoint: endpoint {
				remote-endpoint = <&cs42l51_rx_endpoint>;
				format = "i2s";
				mclk-fs = <256>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
			};
		};
	};
};

&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	cd-gpios = <&gpioh 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	status = "okay";
};

&sdmmc2 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_d47_pins_a>;
	pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_d47_pins_a>;
	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_d47_sleep_pins_a>;
	non-removable;
	no-sd;
	no-sdio;
	st,neg-edge;
	bus-width = <8>;
	vmmc-supply = <&v3v3>;
	vqmmc-supply = <&vdd>;
	mmc-ddr-3_3v;
	status = "okay";
};

&sdmmc3 {
	arm,primecell-periphid = <0x10153180>;
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc3_b4_wifi_pins_a>;
	pinctrl-1 = <&sdmmc3_b4_od_wifi_pins_a>;
	pinctrl-2 = <&sdmmc3_b4_sleep_wifi_pins_a>;
	non-removable;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	mmc-pwrseq = <&wifi_pwrseq>;
	#address-cells = <1>;
	#size-cells = <0>;
	keep-power-in-suspend;
	status = "okay";
	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
	};
};

// &spi4 {
// 	pinctrl-names = "default", "sleep";
// 	pinctrl-0 = <&spi4_pins_a>;
// 	pinctrl-1 = <&spi4_sleep_pins_a>;
// 	status = "disabled";
// };

// &spi5 {
// 	pinctrl-names = "default", "sleep";
// 	pinctrl-0 = <&spi5_pins_a>;
// 	pinctrl-1 = <&spi5_sleep_pins_a>;
// 	status = "disabled";
// };

&sram {
	dma_pool: dma_pool@0 {
		reg = <0x50000 0x10000>;
		pool;
	};
};

&timers1 {
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	pwm {
		pinctrl-0 = <&pwm1_pins_a>;
		pinctrl-1 = <&pwm1_sleep_pins_a>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	timer@0 {
		status = "okay";
	};
};

&timers2 {
	// Don't occupy dma-channel
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
	pwm2:pwm {
		pinctrl-0 = <&pwm2_pins_b>;
		pinctrl-1 = <&pwm2_sleep_pins_b>;
		pinctrl-names = "default", "sleep";
		// Dual-Mode, to save power
		#pwm-cells= <2>;
		status = "okay";
	};
	timer@2 {
		status = "disabled";
	};
};


&pinctrl {
	// The real pin was controlled
	pwm2_pins_b: pwm2-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 5, AF1)>; /* TIM2_CH1 */
			bias-pull-down;
			drive-push-pull;
			slew-rate = <0>;
		};
	};
	pwm2_sleep_pins_b: pwm1-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 5, ANALOG)>; /* TIM2_CH1 */
		};
	};
	usart3_pins_bt: usart3-bt-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 8, AF7)>, /* USART3_TX */
					 <STM32_PINMUX('D', 12, AF7)>; /* USART3_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 9, AF7)>, /* USART3_RX */
					 <STM32_PINMUX('D', 11, AF7)>; /* USART3_CTS_NSS */
			bias-disable;
		};
	};
	usart3_idle_pins_bt: usart3-idle-bt-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
					 <STM32_PINMUX('D', 12, ANALOG)>, /* USART3_RTS */
					 <STM32_PINMUX('D', 11, ANALOG)>; /* USART3_CTS_NSS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 9, AF7)>; /* USART3_RX */
			bias-disable;
		};
	};
	usart3_sleep_pins_bt: usart3-sleep-bt-0 {
		pins {
			pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
					 <STM32_PINMUX('D', 12, ANALOG)>, /* USART3_RTS */
				 	 <STM32_PINMUX('D', 9, ANALOG)>, /* USART3_RX */
					 <STM32_PINMUX('D', 11, ANALOG)>; /* USART3_CTS_NSS */
		};
	};
	sdmmc3_b4_wifi_pins_a: sdmmc3-b4-wifi-0 {
		pins1 {
			pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
					<STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
					<STM32_PINMUX('D', 5, AF10)>, /* SDMMC3_D2 */
					<STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
					<STM32_PINMUX('D', 0, AF10)>; /* SDMMC3_CMD */
					slew-rate = <1>;
					drive-push-pull;
					bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
	};
	sdmmc3_b4_od_wifi_pins_a: sdmmc3-b4-od-wifi-0 {
		pins1 {
			pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
					<STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
					<STM32_PINMUX('D', 5, AF10)>, /* SDMMC3_D2 */
					<STM32_PINMUX('D', 7, AF10)>; /* SDMMC3_D3 */
					slew-rate = <1>;
					drive-push-pull;
					bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
			slew-rate = <2>;
			drive-push-pull;
			bias-pull-up;
		};
		pins3 {
			pinmux = <STM32_PINMUX('D', 0, AF10)>; /* SDMMC3_CMD */
			slew-rate = <1>;
			drive-open-drain;
			bias-pull-up;
		};
	};
	sdmmc3_b4_sleep_wifi_pins_a: sdmmc3-b4-sleep-wifi-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
					<STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
					<STM32_PINMUX('D', 5, AF10)>, /* SDMMC3_D2 */
					<STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
					<STM32_PINMUX('G', 15, AF10)>, /* SDMMC3_CK */
					<STM32_PINMUX('D', 0, AF10)>; /* SDMMC3_CMD */
		};
	};
};

&timers3 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	pwm {
		pinctrl-0 = <&pwm3_pins_a>;
		pinctrl-1 = <&pwm3_sleep_pins_a>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	timer@2 {
		status = "okay";
	};
};

&timers4 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	pwm {
		pinctrl-0 = <&pwm4_pins_a &pwm4_pins_b>;
		pinctrl-1 = <&pwm4_sleep_pins_a &pwm4_sleep_pins_b>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	timer@3 {
		status = "okay";
	};
};

&timers5 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	pwm {
		pinctrl-0 = <&pwm5_pins_a>;
		pinctrl-1 = <&pwm5_sleep_pins_a>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	timer@4 {
		status = "okay";
	};
};

&timers6 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	timer@5 {
		status = "okay";
	};
};

&timers12 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	pwm {
		pinctrl-0 = <&pwm12_pins_a>;
		pinctrl-1 = <&pwm12_sleep_pins_a>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	timer@11 {
		status = "okay";
	};
};

&uart4 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&uart4_pins_a>;
	pinctrl-1 = <&uart4_sleep_pins_a>;
	pinctrl-2 = <&uart4_idle_pins_a>;
	pinctrl-3 = <&uart4_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

// &uart7 {
// 	pinctrl-names = "default", "sleep", "idle";
// 	pinctrl-0 = <&uart7_pins_b>;
// 	pinctrl-1 = <&uart7_sleep_pins_b>;
// 	pinctrl-2 = <&uart7_idle_pins_b>;
// 	/delete-property/dmas;
// 	/delete-property/dma-names;
// 	status = "disabled";
// };

&usart3 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&usart3_pins_bt>;
	pinctrl-1 = <&usart3_sleep_pins_bt>;
	pinctrl-2 = <&usart3_idle_pins_bt>;
	uart-has-rtscts;
	status = "okay";

	bluetooth {
		shutdown-gpios = <&gpiod 13 GPIO_ACTIVE_HIGH>;
		compatible = "brcm,bcm43438-bt";
		max-speed = <3000000>;
		vbat-supply = <&v3v3>;
		vddio-supply = <&v3v3>;
	};
};

// &usbh_ehci {
// 	phys = <&usbphyc_port0>;
// 	status = "okay";
// };

// &usbotg_hs {
// 	phys = <&usbphyc_port1 0>;
// 	phy-names = "usb2-phy";
// 	usb-role-switch;
// 	status = "okay";

// 	port {
// 		usbotg_hs_ep: endpoint {
// 			remote-endpoint = <&con_usbotg_hs_ep>;
// 		};
// 	};
// };

// &usbphyc {
// 	status = "okay";
// };

// &usbphyc_port0 {
// 	phy-supply = <&vdd_usb>;
// 	st,phy-tuning = <&usb_phy_tuning>;
// };

// &usbphyc_port1 {
// 	phy-supply = <&vdd_usb>;
// 	st,phy-tuning = <&usb_phy_tuning>;
// };

&vrefbuf {
	regulator-min-microvolt = <2500000>;
	regulator-max-microvolt = <2500000>;
	vdda-supply = <&vdd>;
	status = "okay";
};
